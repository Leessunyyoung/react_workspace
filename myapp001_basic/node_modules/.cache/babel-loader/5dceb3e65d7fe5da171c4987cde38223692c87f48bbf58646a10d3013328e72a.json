{"ast":null,"code":"var _jsxFileName = \"D:\\\\bic_study\\\\react_workspace\\\\myapp001_basic\\\\src\\\\components\\\\ex04_useEffect\\\\MyuseEffect001.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/*\r\n  useEffect : 컴포넌트가 렌더링될 때마다 특정 작업을 수행하도록 설정한다.\r\n  특정작업(side effect) : Time(setTimeout), Ajax ->비동기화 작업처리되는것들\r\n  useEffect: useEffect는 side effect라는 뜻이다.\r\n  useEffect 4가지 종류\r\n  1. useEffect(callback) : 마운트 후, 리렌더링 될때마다\r\n  2. useEffect(callback,[]) : 마운트 후\r\n  3. useEffect(callback, [state]) : 마운트 후, state\r\n  4. useEffect(callback() { return();}, []) : 마운트 후, 언마운트 전\r\n\r\n\r\n*/\n\nconst MyuseEffect001 = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [nickName, setNickName] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"\\uC774\\uB984:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"\\uB2C9\\uB124\\uC784:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), nickName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(MyuseEffect001, \"UBUaJXH+7RlDqom4cajE/9X2GW4=\");\n_c = MyuseEffect001;\nexport default MyuseEffect001;\nvar _c;\n$RefreshReg$(_c, \"MyuseEffect001\");","map":{"version":3,"names":["MyuseEffect001","name","setName","useState","nickName","setNickName"],"sources":["D:/bic_study/react_workspace/myapp001_basic/src/components/ex04_useEffect/MyuseEffect001.js"],"sourcesContent":["/*\r\n  useEffect : 컴포넌트가 렌더링될 때마다 특정 작업을 수행하도록 설정한다.\r\n  특정작업(side effect) : Time(setTimeout), Ajax ->비동기화 작업처리되는것들\r\n  useEffect: useEffect는 side effect라는 뜻이다.\r\n  useEffect 4가지 종류\r\n  1. useEffect(callback) : 마운트 후, 리렌더링 될때마다\r\n  2. useEffect(callback,[]) : 마운트 후\r\n  3. useEffect(callback, [state]) : 마운트 후, state\r\n  4. useEffect(callback() { return();}, []) : 마운트 후, 언마운트 전\r\n\r\n\r\n*/\r\n\r\nconst MyuseEffect001 = () => {\r\n  const [name, setName] = useState('');\r\n  const [nickName, setNickName] = useState('');\r\n  return (\r\n    <div>\r\n      <div>\r\n        <b>이름:</b>\r\n        {name}\r\n      </div>\r\n\r\n      <div>\r\n        <b>닉네임:</b>\r\n        {nickName}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyuseEffect001;\r\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,cAAc,GAAG,MAAM;EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EAC5C,oBACE;IAAA,wBACE;MAAA,wBACE;QAAA,UAAG;MAAG;QAAA;QAAA;QAAA;MAAA,QAAI,EACTF,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACD,eAEN;MAAA,wBACE;QAAA,UAAG;MAAI;QAAA;QAAA;QAAA;MAAA,QAAI,EACVG,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GAhBIJ,cAAc;AAAA,KAAdA,cAAc;AAkBpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}