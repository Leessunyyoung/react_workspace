{"ast":null,"code":"var _jsxFileName = \"D:\\\\bic_study\\\\react_workspace\\\\myapp001_basic\\\\src\\\\components\\\\ex02_useState\\\\MyBasic003.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyBasic003 = () => {\n  _s();\n  const [names, setNames] = useState(['고수', '박보검', '송중기']);\n  const [input, setInput] = useState('');\n  const handleChangeName = e => {\n    setInput(e.target.value);\n    console.log(e.target.value);\n  };\n  const handleClick = e => {\n    // setNames(input); ->const [names, setNames] = useState(['고수', '박보검', '송중기']); 애는 배열이고 setNames는 string값이라 안된다\n    setNames([input, ...names]); //...names는 append와 같다\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"fname\",\n      onChange: handleChangeName,\n      value: input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"ADD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), names.map((value, index) => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: value\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 16\n      }, this);\n      // 리액트는 이전의 돔과 비교해서 다른 점을 렌더링해주는 특징\n      // key값은 변하는 요소이면 써주는게 좋다.\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(MyBasic003, \"GoX9CCLmBngLQ4mMu1E3mecmmVs=\");\n_c = MyBasic003;\nexport default MyBasic003;\nvar _c;\n$RefreshReg$(_c, \"MyBasic003\");","map":{"version":3,"names":["useState","MyBasic003","names","setNames","input","setInput","handleChangeName","e","target","value","console","log","handleClick","map","index"],"sources":["D:/bic_study/react_workspace/myapp001_basic/src/components/ex02_useState/MyBasic003.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nconst MyBasic003 = () => {\r\n  const [names, setNames] = useState(['고수', '박보검', '송중기']);\r\n  const [input, setInput] = useState('');\r\n  const handleChangeName = (e) => {\r\n    setInput(e.target.value);\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    // setNames(input); ->const [names, setNames] = useState(['고수', '박보검', '송중기']); 애는 배열이고 setNames는 string값이라 안된다\r\n    setNames([input, ...names]); //...names는 append와 같다\r\n    setInput('');\r\n  };\r\n  return (\r\n    <div>\r\n      <input type='text' id='fname' onChange={handleChangeName} value={input} />\r\n      {/* e.target.value에서 value는 여기있는 value다 const[input,setInput]에서 input과 동일하게 써줘야한다. */}\r\n      <button onClick={handleClick}>ADD</button>\r\n      {/* return을 해줄려면 중괄호를 써야한다.소괄호로 할려면\r\n            {names.map((value, index) => (\r\n             <p key={index}>{value}</p>;\r\n      ))}\r\n       */}\r\n      {names.map((value, index) => {\r\n        return <p key={index}>{value}</p>;\r\n        // 리액트는 이전의 돔과 비교해서 다른 점을 렌더링해주는 특징\r\n        // key값은 변하는 요소이면 써주는게 좋다.\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyBasic003;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAEjC,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;EACxD,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMM,gBAAgB,GAAIC,CAAC,IAAK;IAC9BF,QAAQ,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IACxBC,OAAO,CAACC,GAAG,CAACJ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMG,WAAW,GAAIL,CAAC,IAAK;IACzB;IACAJ,QAAQ,CAAC,CAACC,KAAK,EAAE,GAAGF,KAAK,CAAC,CAAC,CAAC,CAAC;IAC7BG,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EACD,oBACE;IAAA,wBACE;MAAO,IAAI,EAAC,MAAM;MAAC,EAAE,EAAC,OAAO;MAAC,QAAQ,EAAEC,gBAAiB;MAAC,KAAK,EAAEF;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eAE1E;MAAQ,OAAO,EAAEQ,WAAY;MAAA,UAAC;IAAG;MAAA;MAAA;MAAA;IAAA,QAAS,EAMzCV,KAAK,CAACW,GAAG,CAAC,CAACJ,KAAK,EAAEK,KAAK,KAAK;MAC3B,oBAAO;QAAA,UAAgBL;MAAK,GAAbK,KAAK;QAAA;QAAA;QAAA;MAAA,QAAa;MACjC;MACA;IACF,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GA9BIb,UAAU;AAAA,KAAVA,UAAU;AAgChB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}