{"ast":null,"code":"var _jsxFileName = \"D:\\\\bic_study\\\\react_workspace\\\\myapp001_basic\\\\src\\\\components\\\\ex06_useReducer\\\\MyuseReducer002.js\",\n  _s = $RefreshSig$();\nimport { useReducer, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction reducer(state, action) {\n  //state  = { name: '', nickname: '' }을 받고\n  switch (action.check //action = { check: e.target.name, type: e.target.value } 를 받는다.\n  ) {\n    case 'name':\n      return {\n        name: action.type\n      };\n    //{}가있으면 key가있고 값이있어야한다\n    case 'nickname':\n      return {\n        nickname: action.type\n      };\n    default:\n      return {\n        state\n      };\n    //{state} = { name: '', nickname: '' }\n  }\n}\n\nconst MyuseReducer002 = () => {\n  _s();\n  //   const [name, setName] = useState('');\n  //   const [nickname, setNickName] = useState('');\n\n  //   const onChangeName = (e) => {\n  //     setName(e.target.value);\n  //   };\n\n  //   const onChangeNickName = (e) => {\n  //     setNickName(e.target.value);\n  //   };\n\n  const [state, dispatch] = useReducer(reducer, {\n    name: '',\n    nickname: ''\n  });\n  const {\n    name,\n    nickname\n  } = state;\n  const onChange = e => {\n    dispatch({\n      check: e.target.name,\n      type: e.target.value\n    }); //이값은 함수 redecer에서 받는다.\n    //action이벤트를 발생시키는 방법은 dispatch 라는 함수에 단순 객체인 action을 넣는 것으로 할 수 있다.\n    //dispatch(action) => reducer동작 => store의 state변경 => 변경된 state가 state를 subscription하고 있는 component에 정보전달.\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\" //state값으로 사용 useReducer(reducer, { name: '', nickname: '' });여기 name과 같아야함\n        ,\n        placeholder: \"name\"\n        //   onChangeName={onChangeName}\n        ,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"nickname\",\n        placeholder: \"nickname\"\n        //   onChangeName={onChangeNickName}\n        ,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"\\uC774\\uB984:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"\\uB2C9\\uB124\\uC784:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), nickname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(MyuseReducer002, \"BTrie+pYjVYhxzUPyrEnd4MFp9w=\");\n_c = MyuseReducer002;\nexport default MyuseReducer002;\nvar _c;\n$RefreshReg$(_c, \"MyuseReducer002\");","map":{"version":3,"names":["useReducer","useState","reducer","state","action","check","name","type","nickname","MyuseReducer002","dispatch","onChange","e","target","value"],"sources":["D:/bic_study/react_workspace/myapp001_basic/src/components/ex06_useReducer/MyuseReducer002.js"],"sourcesContent":["import { useReducer, useState } from 'react';\r\n\r\nfunction reducer(state, action) {\r\n  //state  = { name: '', nickname: '' }을 받고\r\n  switch (\r\n    action.check //action = { check: e.target.name, type: e.target.value } 를 받는다.\r\n  ) {\r\n    case 'name':\r\n      return { name: action.type }; //{}가있으면 key가있고 값이있어야한다\r\n    case 'nickname':\r\n      return { nickname: action.type };\r\n    default:\r\n      return { state }; //{state} = { name: '', nickname: '' }\r\n  }\r\n}\r\n\r\nconst MyuseReducer002 = () => {\r\n  //   const [name, setName] = useState('');\r\n  //   const [nickname, setNickName] = useState('');\r\n\r\n  //   const onChangeName = (e) => {\r\n  //     setName(e.target.value);\r\n  //   };\r\n\r\n  //   const onChangeNickName = (e) => {\r\n  //     setNickName(e.target.value);\r\n  //   };\r\n\r\n  const [state, dispatch] = useReducer(reducer, { name: '', nickname: '' });\r\n  const { name, nickname } = state;\r\n  const onChange = (e) => {\r\n    dispatch({ check: e.target.name, type: e.target.value }); //이값은 함수 redecer에서 받는다.\r\n    //action이벤트를 발생시키는 방법은 dispatch 라는 함수에 단순 객체인 action을 넣는 것으로 할 수 있다.\r\n    //dispatch(action) => reducer동작 => store의 state변경 => 변경된 state가 state를 subscription하고 있는 component에 정보전달.\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input\r\n          type='text'\r\n          name='name' //state값으로 사용 useReducer(reducer, { name: '', nickname: '' });여기 name과 같아야함\r\n          placeholder='name'\r\n          //   onChangeName={onChangeName}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type='text'\r\n          name='nickname'\r\n          placeholder='nickname'\r\n          //   onChangeName={onChangeNickName}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <b>이름:</b>\r\n        {name}\r\n      </div>\r\n      <div>\r\n        <b>닉네임:</b>\r\n        {nickname}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MyuseReducer002;\r\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAE7C,SAASC,OAAO,CAACC,KAAK,EAAEC,MAAM,EAAE;EAC9B;EACA,QACEA,MAAM,CAACC,KAAK,CAAC;EAAA;IAEb,KAAK,MAAM;MACT,OAAO;QAAEC,IAAI,EAAEF,MAAM,CAACG;MAAK,CAAC;IAAE;IAChC,KAAK,UAAU;MACb,OAAO;QAAEC,QAAQ,EAAEJ,MAAM,CAACG;MAAK,CAAC;IAClC;MACE,OAAO;QAAEJ;MAAM,CAAC;IAAE;EAAA;AAExB;;AAEA,MAAMM,eAAe,GAAG,MAAM;EAAA;EAC5B;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,MAAM,CAACN,KAAK,EAAEO,QAAQ,CAAC,GAAGV,UAAU,CAACE,OAAO,EAAE;IAAEI,IAAI,EAAE,EAAE;IAAEE,QAAQ,EAAE;EAAG,CAAC,CAAC;EACzE,MAAM;IAAEF,IAAI;IAAEE;EAAS,CAAC,GAAGL,KAAK;EAChC,MAAMQ,QAAQ,GAAIC,CAAC,IAAK;IACtBF,QAAQ,CAAC;MAAEL,KAAK,EAAEO,CAAC,CAACC,MAAM,CAACP,IAAI;MAAEC,IAAI,EAAEK,CAAC,CAACC,MAAM,CAACC;IAAM,CAAC,CAAC,CAAC,CAAC;IAC1D;IACA;EACF,CAAC;;EACD,oBACE;IAAA,wBACE;MAAA,wBACE;QACE,IAAI,EAAC,MAAM;QACX,IAAI,EAAC,MAAM,CAAC;QAAA;QACZ,WAAW,EAAC;QACZ;QAAA;QACA,QAAQ,EAAEH;MAAS;QAAA;QAAA;QAAA;MAAA,QACnB,eACF;QACE,IAAI,EAAC,MAAM;QACX,IAAI,EAAC,UAAU;QACf,WAAW,EAAC;QACZ;QAAA;QACA,QAAQ,EAAEA;MAAS;QAAA;QAAA;QAAA;MAAA,QACnB;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,eACN;MAAA,wBACE;QAAA,UAAG;MAAG;QAAA;QAAA;QAAA;MAAA,QAAI,EACTL,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACD,eACN;MAAA,wBACE;QAAA,UAAG;MAAI;QAAA;QAAA;QAAA;MAAA,QAAI,EACVE,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GA/CIC,eAAe;AAAA,KAAfA,eAAe;AAgDrB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}