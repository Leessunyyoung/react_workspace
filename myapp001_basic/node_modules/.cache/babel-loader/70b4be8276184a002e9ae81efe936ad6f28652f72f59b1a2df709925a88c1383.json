{"ast":null,"code":"var _jsxFileName = \"D:\\\\bic_study\\\\react_workspace\\\\myapp001_basic\\\\src\\\\components\\\\ex05_async\\\\MyuseStatesync002.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\n\n/*\r\n\r\nREACT는 state가 변경이 될때마다 렌더링이 발생하낟.\r\nReact 렌더링이 발생되면 배치로 해서 처리한다.\r\n배치 16ms 단위로 처리한다.\r\nuseState()은 비동기화로 처리한다.\r\n*/\n\n// MyuseStatesync001은 차곡차곡 쌓였다가 제일 마지막꺼만 처리해주고 MyuseStatesync002은 콜백함수를 이용해 차례대로 처리해준다.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyuseStatesync002 = () => {\n  _s();\n  const [number, setNumber] = useState(0);\n  const handleUpNumber = () => {\n    setNumber(number => number + 1); //콜백함수를 호출해 처리하면 순차적으로 처리된다.\n\n    setNumber(number => number + 1);\n    setNumber(number => number + 1);\n  };\n  const handleDownNumber = () => {\n    setNumber(number - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: number\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpNumber,\n      children: \"UP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDownNumber,\n      children: \"DOWN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(MyuseStatesync002, \"G5PFX1wnjBJODPcJAktOglW1raM=\");\n_c = MyuseStatesync002;\nexport default MyuseStatesync002;\nvar _c;\n$RefreshReg$(_c, \"MyuseStatesync002\");","map":{"version":3,"names":["useState","MyuseStatesync002","number","setNumber","handleUpNumber","handleDownNumber"],"sources":["D:/bic_study/react_workspace/myapp001_basic/src/components/ex05_async/MyuseStatesync002.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\n/*\r\n\r\nREACT는 state가 변경이 될때마다 렌더링이 발생하낟.\r\nReact 렌더링이 발생되면 배치로 해서 처리한다.\r\n배치 16ms 단위로 처리한다.\r\nuseState()은 비동기화로 처리한다.\r\n*/\r\n\r\n// MyuseStatesync001은 차곡차곡 쌓였다가 제일 마지막꺼만 처리해주고 MyuseStatesync002은 콜백함수를 이용해 차례대로 처리해준다.\r\nconst MyuseStatesync002 = () => {\r\n  const [number, setNumber] = useState(0);\r\n\r\n  const handleUpNumber = () => {\r\n    setNumber((number) => number + 1); //콜백함수를 호출해 처리하면 순차적으로 처리된다.\r\n\r\n    setNumber((number) => number + 1);\r\n\r\n    setNumber((number) => number + 1);\r\n  };\r\n\r\n  const handleDownNumber = () => {\r\n    setNumber(number - 1);\r\n  };\r\n  return (\r\n    <div>\r\n      <p>{number}</p>\r\n      <button onClick={handleUpNumber}>UP</button>\r\n      <button onClick={handleDownNumber}>DOWN</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyuseStatesync002;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA,MAAMC,iBAAiB,GAAG,MAAM;EAAA;EAC9B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGH,QAAQ,CAAC,CAAC,CAAC;EAEvC,MAAMI,cAAc,GAAG,MAAM;IAC3BD,SAAS,CAAED,MAAM,IAAKA,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;;IAEnCC,SAAS,CAAED,MAAM,IAAKA,MAAM,GAAG,CAAC,CAAC;IAEjCC,SAAS,CAAED,MAAM,IAAKA,MAAM,GAAG,CAAC,CAAC;EACnC,CAAC;EAED,MAAMG,gBAAgB,GAAG,MAAM;IAC7BF,SAAS,CAACD,MAAM,GAAG,CAAC,CAAC;EACvB,CAAC;EACD,oBACE;IAAA,wBACE;MAAA,UAAIA;IAAM;MAAA;MAAA;MAAA;IAAA,QAAK,eACf;MAAQ,OAAO,EAAEE,cAAe;MAAA,UAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAS,eAC5C;MAAQ,OAAO,EAAEC,gBAAiB;MAAA,UAAC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC5C;AAEV,CAAC;AAAC,GArBIJ,iBAAiB;AAAA,KAAjBA,iBAAiB;AAuBvB,eAAeA,iBAAiB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}