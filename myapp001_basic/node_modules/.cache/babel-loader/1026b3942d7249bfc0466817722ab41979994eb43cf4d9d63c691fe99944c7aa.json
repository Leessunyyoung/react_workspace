{"ast":null,"code":"var _jsxFileName = \"D:\\\\bic_study\\\\react_workspace\\\\myapp001_basic\\\\src\\\\components\\\\ex03_userRef\\\\MyuseRef001.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyuseRef001 = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const countRef = useRef(0);\n  let countLet = 0;\n  const upCountState = () => {\n    setCount(count + 1);\n  };\n  const upCountRef = () => {\n    console.log(countRef.current = countRef.current + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"State:\", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Ref:\", countRef.current]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Lef:\", countLet]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: upCountState,\n      children: \"state\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: upCountRef,\n      children: \"ref\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(MyuseRef001, \"BvwWMS9BtXACxadBMB9uVJRoG9k=\");\n_c = MyuseRef001;\nexport default MyuseRef001;\n//Ref는 리렌더링이 발생하지않는다 값은바뀌지만 화면은 바뀌지 않는다\nvar _c;\n$RefreshReg$(_c, \"MyuseRef001\");","map":{"version":3,"names":["useRef","useState","MyuseRef001","count","setCount","countRef","countLet","upCountState","upCountRef","console","log","current"],"sources":["D:/bic_study/react_workspace/myapp001_basic/src/components/ex03_userRef/MyuseRef001.js"],"sourcesContent":["import { useRef, useState } from 'react';\r\n\r\nconst MyuseRef001 = () => {\r\n  const [count, setCount] = useState(0);\r\n  const countRef = useRef(0);\r\n  let countLet = 0;\r\n\r\n  const upCountState = () => {\r\n    setCount(count + 1);\r\n  };\r\n  const upCountRef = () => {\r\n    console.log((countRef.current = countRef.current + 1));\r\n  };\r\n  return (\r\n    <div>\r\n      <p>State:{count}</p>\r\n      <p>Ref:{countRef.current}</p>\r\n      <p>Lef:{countLet}</p>\r\n\r\n      <button onClick={upCountState}>state</button>\r\n      <button onClick={upCountRef}>ref</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyuseRef001;\r\n//Ref는 리렌더링이 발생하지않는다 값은바뀌지만 화면은 바뀌지 않는다\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAEzC,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMI,QAAQ,GAAGL,MAAM,CAAC,CAAC,CAAC;EAC1B,IAAIM,QAAQ,GAAG,CAAC;EAEhB,MAAMC,YAAY,GAAG,MAAM;IACzBH,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACrB,CAAC;EACD,MAAMK,UAAU,GAAG,MAAM;IACvBC,OAAO,CAACC,GAAG,CAAEL,QAAQ,CAACM,OAAO,GAAGN,QAAQ,CAACM,OAAO,GAAG,CAAC,CAAE;EACxD,CAAC;EACD,oBACE;IAAA,wBACE;MAAA,WAAG,QAAM,EAACR,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eACpB;MAAA,WAAG,MAAI,EAACE,QAAQ,CAACM,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eAC7B;MAAA,WAAG,MAAI,EAACL,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eAErB;MAAQ,OAAO,EAAEC,YAAa;MAAA,UAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAS,eAC7C;MAAQ,OAAO,EAAEC,UAAW;MAAA,UAAC;IAAG;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACrC;AAEV,CAAC;AAAC,GArBIN,WAAW;AAAA,KAAXA,WAAW;AAuBjB,eAAeA,WAAW;AAC1B;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}